{"mappings":"ACEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,WACxD,EAAQ,wBACV,EACF,GAGM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WAAM,OAAA,EAAO,AAAI,MAAM,yBAA2B,EAAA,IAC/D,GAGM,EAAgB,SAAC,CAAvB,EACE,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAqB,EAAS,UAChC,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAqB,EAAM,OAAO,CAAE,wBACtC,EACJ,EAGM,EAAuB,SAAC,CAAA,CAAM,CAApC,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,EAChB,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAGA,EAAc,GACd,EAAc","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promise1 = new Promise(function(resolve) {\n    document.querySelector(\".logo\").addEventListener(\"click\", function() {\n        resolve(\"Promise was resolved!\");\n    });\n});\n// Promise 2: Reject after 3 seconds\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        return reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\n// General handler for promises\nvar handlePromise = function(promise) {\n    promise.then(function(message) {\n        createMessageElement(message, \"message\");\n    }).catch(function(error) {\n        createMessageElement(error.message, \"message error-message\");\n    });\n};\n// Utility to create and append message elements\nvar createMessageElement = function(text, className) {\n    var div = document.createElement(\"div\");\n    div.className = className;\n    div.textContent = text;\n    document.body.append(div);\n};\n// Attach handlers to promises\nhandlePromise(promise1);\nhandlePromise(promise2);\n\n//# sourceMappingURL=index.f9bd72c9.js.map\n","'use strict';\n\nconst promise1 = new Promise((resolve) => {\n  document.querySelector('.logo').addEventListener('click', () => {\n    resolve('Promise was resolved!');\n  });\n});\n\n// Promise 2: Reject after 3 seconds\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => reject(new Error('Promise was rejected!')), 3000);\n});\n\n// General handler for promises\nconst handlePromise = (promise) => {\n  promise\n    .then((message) => {\n      createMessageElement(message, 'message');\n    })\n    .catch((error) => {\n      createMessageElement(error.message, 'message error-message');\n    });\n};\n\n// Utility to create and append message elements\nconst createMessageElement = (text, className) => {\n  const div = document.createElement('div');\n\n  div.className = className;\n  div.textContent = text;\n  document.body.append(div);\n};\n\n// Attach handlers to promises\nhandlePromise(promise1);\nhandlePromise(promise2);\n"],"names":["promise1","Promise","resolve","document","querySelector","addEventListener","promise2","reject","setTimeout","Error","handlePromise","promise","then","message","createMessageElement","catch","error","text","className","div","createElement","textContent","body","append"],"version":3,"file":"index.f9bd72c9.js.map"}